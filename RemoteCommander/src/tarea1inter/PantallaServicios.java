/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tarea1inter;

import com.jcraft.jsch.JSchException;
import java.io.IOException;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author berna
 */
public class PantallaServicios extends javax.swing.JFrame {
    
    public ClaseSSH ssh = new ClaseSSH();
    static DefaultTableModel modelo;
    
    public PantallaServicios() {
        initComponents();
        
        modelo = new DefaultTableModel();
        modelo.addColumn("Nombre Servicio");
        modelo.addColumn("Estado");
        this.jTable1.setModel(modelo);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnVerServicios = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMensajeSistema = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Desconectar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Iniciar Servicio");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Pausar Servicio");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Reiniciar Servicio");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnVerServicios.setText("Ver Servicios");
        btnVerServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerServiciosActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Respuesta del sistema");

        txtMensajeSistema.setColumns(20);
        txtMensajeSistema.setRows(5);
        jScrollPane2.setViewportView(txtMensajeSistema);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(176, 176, 176))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnVerServicios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(btnVerServicios)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerServiciosActionPerformed
        
        try {
            ssh.mostrarServicios();
            if (ssh.OS.equalsIgnoreCase("windows")) {
                for (int i = 1; i < ssh.nombreServicios.length; i++) {
                    modelo.addRow(new Object[]{ssh.nombreServicios[i], ssh.EstadoServicios[i]});
                }
            } else {
                
                for (int i = 7; i < ssh.nombreServicios.length; i++) {
                    String estado, nombre;
                    String[] split;
                    split = ssh.nombreServicios[i].split("] ");
                    estado = split[0];
                    nombre = split[1];
                    if (estado.contains("-")) {
                        estado = "Pausado";
                    }
                    if (estado.contains("+")) {
                        estado = "Iniciado";
                    }
                    modelo.addRow(new Object[]{nombre, estado});
                }
                
            }
            
        } catch (Exception e) {
        }
        

    }//GEN-LAST:event_btnVerServiciosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        ssh.desconectar();
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
            //Se Crea el modelo para la tabla
            //Si el resultado es 1 significa que esta selecionada una fila
            if (jTable1.getSelectedRowCount() == 1) {
                String nombreServicio = (String) modelo.getValueAt(jTable1.getSelectedRow(), 0); //Se pasa el valor de obj a string

                ssh.realizarAccion("iniciar", nombreServicio);
                
            } else {
                
                JOptionPane.showMessageDialog(this, "Seleccione un servicio para Iniciarlo");
                
            }
            for (int i = modelo.getRowCount() - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }
            try {
                ssh.mostrarServicios();
                
                for (int i = 1; i < ssh.nombreServicios.length; i++) {
                    modelo.addRow(new Object[]{ssh.nombreServicios[i], ssh.EstadoServicios[i]});
                }
            } catch (Exception e) {
            }
            
            txtMensajeSistema.setText(ssh.todtexto);
        } catch (Exception e) {
        }
        

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            //Se Crea el modelo para la tabla
            //Si el resultado es 1 significa que esta selecionada una fila
            if (jTable1.getSelectedRowCount() == 1) {
                String nombreServicio = (String) modelo.getValueAt(jTable1.getSelectedRow(), 0); //Se pasa el valor de obj a string

                ssh.realizarAccion("pausa", nombreServicio);
                
            } else {
                
                JOptionPane.showMessageDialog(this, "Seleccione un servicio para Pausarlo");
                
            }
            for (int i = modelo.getRowCount() - 1; i >= 0; i--) {
                modelo.removeRow(i);
            }
            try {
                ssh.mostrarServicios();
                
                for (int i = 1; i < ssh.nombreServicios.length; i++) {
                    modelo.addRow(new Object[]{ssh.nombreServicios[i], ssh.EstadoServicios[i]});
                }
            } catch (Exception e) {
            }
            
            txtMensajeSistema.setText(ssh.todtexto);
        } catch (Exception e) {
        }
        

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        try {
            //Se Crea el modelo para la tabla
            //Si el resultado es 1 significa que esta selecionada una fila
            if (jTable1.getSelectedRowCount() == 1) {
                String nombreServicio = (String) modelo.getValueAt(jTable1.getSelectedRow(), 0); //Se pasa el valor de obj a string

                ssh.realizarAccion("pausar", nombreServicio);
                ssh.realizarAccion("iniciar", nombreServicio);
                for (int i = modelo.getRowCount() - 1; i >= 0; i--) {
                    modelo.removeRow(i);
                }
                try {
                    ssh.mostrarServicios();
                    
                    for (int i = 1; i < ssh.nombreServicios.length; i++) {
                        modelo.addRow(new Object[]{ssh.nombreServicios[i], ssh.EstadoServicios[i]});
                    }
                } catch (Exception e) {
                }
            } else {
                
                JOptionPane.showMessageDialog(this, "Seleccione un servicio para Reiniciarlo");
                
            }
            txtMensajeSistema.setText(ssh.todtexto);
        } catch (Exception e) {
        }
        

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        if (jTable1.getSelectedRowCount() == 1) {
            String estadoservicio = (String) modelo.getValueAt(jTable1.getSelectedRow(), 1); //Se pasa el va
            if (estadoservicio.contains("Running") || estadoservicio.contains("Iniciado")) {
                jButton2.setEnabled(false);
                jButton3.setEnabled(true);
            }
             if (estadoservicio.contains("Stopped") || estadoservicio.contains("Pausado")) {
                jButton2.setEnabled(true);
                jButton3.setEnabled(false);
            }
        }
        

    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaServicios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaServicios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnVerServicios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtMensajeSistema;
    // End of variables declaration//GEN-END:variables
}
